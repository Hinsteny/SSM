<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>hinsteny.spring</groupId>
	<artifactId>SpringMVC</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	
	<name>SpringMVC</name>
	<url>http://maven.apache.org</url>
	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jetty-maven-plugin.version>9.3.0.M1</jetty-maven-plugin.version>
		<tomcat7-maven-plugin.name>tomcat7-maven-plugin</tomcat7-maven-plugin.name>
		<tomcat7-maven-plugin.version>2.2</tomcat7-maven-plugin.version>
		<maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
		<maven-resources-plugin.version>2.7</maven-resources-plugin.version>
		<maven-dependency-plugin.version>2.10</maven-dependency-plugin.version>
		<maven-clean-plugin.version>2.6.1</maven-clean-plugin.version>
		
		<junit.version>4.12</junit.version>
		<spring-test.version>4.1.6.RELEASE</spring-test.version>
		<javax.servlet-api.version>3.1.0</javax.servlet-api.version>
		<jstl.version>1.2</jstl.version>
		<hessian.version>4.0.38</hessian.version>
		<spring-webmvc.version>4.1.6.RELEASE</spring-webmvc.version>
		<spring-orm.version>4.1.6.RELEASE</spring-orm.version>
		<spring-web.version>4.1.6.RELEASE</spring-web.version>
		<spring-context-support.version>4.1.6.RELEASE</spring-context-support.version>
		<cglib.version>3.1</cglib.version>
		<aspectjrt.version>1.8.5</aspectjrt.version>
		<ehcache-core.version>2.6.10</ehcache-core.version>
		<spymemcached.version>2.11.7</spymemcached.version>
		<proxool.version>0.9.1</proxool.version>
		<commons-dbcp.version>1.4</commons-dbcp.version>
		<mybatis.version>3.2.8</mybatis.version>
		<mybatis-spring.version>1.2.2</mybatis-spring.version>
		<mysql-connector-java.version>5.1.35</mysql-connector-java.version>
		<persistence-api.version>1.0.2</persistence-api.version>
		<slf4j-api.version>1.7.7</slf4j-api.version>
		<slf4j-log4j12.version>1.7.12</slf4j-log4j12.version>
		<dom4j.version>1.6.1</dom4j.version>
		<sax.version>2.0.1</sax.version>
		<commons-lang3.version>3.4</commons-lang3.version>
		<commons-fileupload.version>1.3.1</commons-fileupload.version>
		<guava.version>18.0</guava.version>
		<jackson-databind.version>2.5.2</jackson-databind.version>
		<javax.mail.version>1.5.2</javax.mail.version>
		<httpclient.version>4.3.6</httpclient.version>
		<scala-library.version>2.10.5</scala-library.version>
		<disruptor.version>3.3.2</disruptor.version>
		<tomcat-jsp-api.version>8.0.21</tomcat-jsp-api.version>
	</properties>
	
	<build>
		<finalName>SpringMVC</finalName>
		<plugins>
			<!-- enabling the mvn jetty:run -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
			    <artifactId>jetty-maven-plugin</artifactId>
			    <version>${jetty-maven-plugin.version}</version>
				<configuration>
					<!-- Uncomment to enable auto java class reload on java changes-->
				    <scanIntervalSeconds>10</scanIntervalSeconds>
				    <webApp>
				      <contextPath>/</contextPath>
				      <tempDirectory>/tmpl</tempDirectory>
				    </webApp>
				  </configuration>
			</plugin>
			
			<!-- tomcat plugin mvn tomcat7:run-->		
			<plugin>
			    <groupId>org.apache.tomcat.maven</groupId>
			    <artifactId>${tomcat7-maven-plugin.name}</artifactId>
			    <version>${tomcat7-maven-plugin.version}</version>
			</plugin>
			
			<!-- maven compile -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-compiler-plugin</artifactId>
			    <version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!-- maven project resources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-resources-plugin</artifactId>
			    <version>${maven-resources-plugin.version}</version>
				<executions>
					<execution>
						<phase>compile</phase>
					</execution>
				</executions>
			</plugin>
			
			<!-- maven project dependency lib-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-dependency-plugin</artifactId>
			    <version>${maven-dependency-plugin.version}</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>  
	                    <phase>prepare-package</phase>  
	                    <goals>  
	                        <goal>copy-dependencies</goal>  
	                    </goals>
					</execution>
				</executions>
				<configuration>
					<includeTypes>jar</includeTypes>  
	                <overWriteSnapshots>true</overWriteSnapshots>  
	                <type>jar</type>
					<outputDirectory>target/src/main/webapp/WEB-INF/lib</outputDirectory>
				</configuration>
			</plugin>
			
			<!-- maven clean -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-clean-plugin</artifactId>
			    <version>${maven-clean-plugin.version}</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>target/src/main/webapp/WEB-INF/lib</directory>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
		
		</plugins>
	</build>
	
	<dependencies>
		<!-- =========================== Test ======================== -->
		<!-- Junit test -->
		<dependency>
			<groupId>junit</groupId>
		    <artifactId>junit</artifactId>
		    <version>${junit.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- Spring TestContext Framework Test -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring-test.version}</version>
            <scope>test</scope>
        </dependency>
		<!-- =========================== /Test ======================= -->
		
		<!-- ===================== Servlet And JSP ==================== -->
		<!-- java servlet -->
		<dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${javax.servlet-api.version}</version>
        </dependency>
        
		<!-- JSP Standard Tag Library -->
        <dependency>
            <groupId>jstl</groupId>
            <artifactId>jstl</artifactId>
            <version>${jstl.version}</version>
        </dependency>
        
        <!-- Hessian is a compact binary protocol for connecting web services. -->
        <dependency>
            <groupId>com.caucho</groupId>
            <artifactId>hessian</artifactId>
            <version>${hessian.version}</version>
        </dependency>
		<!-- ===================== /Servlet And JSP =================== -->
		
		<!-- ======================= SpringMVC ======================= -->
		<!-- Spring Web MVC -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring-webmvc.version}</version>
        </dependency>

		<!-- Spring Object/Relational Mapping -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring-orm.version}</version>
        </dependency>

		<!-- Spring Web -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring-web.version}</version>
        </dependency>

		<!-- Spring Context Support -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring-context-support.version}</version>
        </dependency>
        
		<!-- Code Generation Library (dynamic proxy) -->
        <dependency>
		    <groupId>cglib</groupId>
		    <artifactId>cglib</artifactId>
		    <version>${cglib.version}</version>
		</dependency>

		<!-- The runtime needed to execute a program using AspectJ -->
        <dependency>
            <groupId>org.aspectj</groupId>
		    <artifactId>aspectjrt</artifactId>
		    <version>${aspectjrt.version}</version>
        </dependency>
        
		<!-- ======================= /SpringMVC ======================= -->
		
		<!-- ===================== Cache api =================== -->
		<!-- This is the ehcache core module. Pair it with other modules for added functionality. -->
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-core</artifactId>
            <version>${ehcache-core.version}</version>
        </dependency>
        
        <!-- A client library for memcached. -->
        <dependency>
            <groupId>net.spy</groupId>
            <artifactId>spymemcached</artifactId>
            <version>${spymemcached.version}</version>
        </dependency>
        
		<!-- ===================== /Cache api ================== -->
		
		<!-- ===================== /Data Persistence ================== -->
		<!-- Cloudhopper distribution of Proxool database connection pooling library -->
		<dependency>
		    <groupId>com.cloudhopper.proxool</groupId>
		    <artifactId>proxool</artifactId>
		    <version>${proxool.version}</version>
		</dependency>
		
		<!-- Apache Commons DBCP software implements Database Connection Pooling -->
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>${commons-dbcp.version}</version>
        </dependency>
		<!-- <dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-dbcp2</artifactId>
		    <version>2.1</version>
		</dependency> -->
				
		<!-- The MyBatis data mapper framework makes it easier to use a relational database with object-oriented applications.  -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>${mybatis.version}</version>
        </dependency>

		<!-- >An easy-to-use Spring3 bridge for MyBatis sql mapping framework. -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>${mybatis-spring.version}</version>
        </dependency>

		<!-- MySQL java connector -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-connector-java.version}</version>
        </dependency>
        
        <!-- Javax persistence -->
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>${persistence-api.version}</version>
        </dependency>
		<!-- ===================== /Data Persistence ================== -->
		
		<!-- ===================== /log api =================== -->
		<!-- slf4j-api -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-api.version}</version>
        </dependency>

		<!-- slf4j-log4j12 -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j-log4j12.version}</version>
        </dependency>
        
		<!-- ===================== /log api =================== -->
		
		<!-- ===================== Some Good Tools =================== -->
		<!-- An easy to use, open source library for working with XML, XPath and XSLT on the Java platform -->
        <dependency>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>${dom4j.version}</version>
        </dependency>
        
		<!-- Simple API for XML -->
        <dependency>
            <groupId>sax</groupId>
            <artifactId>sax</artifactId>
            <version>${sax.version}</version>
        </dependency>
        
		<!--  Apache Commons-Lang provides these extra methods -->
        <dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-lang3</artifactId>
		    <version>${commons-lang3.version}</version>
		</dependency>
		
		<!--  To add robust, high-performance, file upload capability to your servlets and web applications -->
        <dependency>
            <groupId>commons-fileupload</groupId>
		    <artifactId>commons-fileupload</artifactId>
		    <version>${commons-fileupload.version}</version>
        </dependency>
        
		<!-- Guava is a suite of core and expanded libraries that include utility classes, google's collections, io classes, and much much more. -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        
		<!-- General data-binding functionality for Jackson: works on core streaming API (Data transform) -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson-databind.version}</version>
        </dependency>
      
		<!-- Sun mail Library -->
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>javax.mail</artifactId>
            <version>${javax.mail.version}</version>
        </dependency>
        
        <!-- Responsible for creating and maintaining a toolset of low level Java components focused on HTTP and associated protocols -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpclient.version}</version>
        </dependency>
		<!-- ===================== /Some Good Tools =================== -->
		
		<!-- ===================== Other package  =================== -->
		<!-- Standard library for the Scala Programming Language -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala-library.version}</version>
        </dependency>

		<!-- Disruptor - Concurrent Programming Framework -->
        <dependency>
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
            <version>${disruptor.version}</version>
        </dependency>
        
		<!-- JSP package -->
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-jsp-api</artifactId>
            <version>${tomcat-jsp-api.version}</version>
            <scope>compile</scope>
        </dependency>
		<!-- ===================== /Other package =================== -->
	</dependencies>

	<repositories>
		<repository>
			<id>Sonatype Snapshot</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
		</repository>
		<repository>
			<id>sonatype</id>
			<url>http://repository.sonatype.org/content/groups/public/</url>
		</repository>
	</repositories>

</project>
