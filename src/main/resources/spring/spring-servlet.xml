<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--处理静态资源[js,css,jpg,包括html等]-->
    <!-- 注册默认的DefaultServletHttpRequestHandler,处理对于webapp目录下不属于WEB-INF的静态资源文件-->
    <mvc:default-servlet-handler/>
    <!--注册ResourceHttpRequestHandler,处理WEB-INF的静态资源文件,包括html。如果此Xml配置方法失效,可以用java config [com.hisoka.config.MyAppWebConfig]的方式替换-->
    <mvc:resources mapping="/res/**" location="/WEB-INF/res/" />

    <!--异常捕获处理-->
	<bean class="com.hisoka.exception.ExceptionHandler"></bean>
	
	<!--使用 JSTl 处理 Jsp 页面-->
	 <bean id="viewResolver" class="com.hisoka.support.spring.ViewDispatcherResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
        <property name="webPrefix" value="/WEB-INF/views/"></property>
        <property name="webSuffix" value=".jsp"></property>
        <property name="mobilePrefix" value="/WEB-INF/views-mobile/"></property>
        <property name="mobileSuffix" value=".jsp"></property>
        <property name="enabled" value="true"></property>
    </bean>
    
	<!-- 支持大文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" p:defaultEncoding="utf-8" />

    <!-- 覆盖默认springmvc的请求与返回数据格式转换方法 -->
    <bean id="requestMappingHandlerAdapter" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jacksonHttpMessageConverter" />
                <ref bean="xmlHttpMessageConverter" />
            </list>
        </property>
    </bean>

    <!-- json数据转化器 -->
    <bean id="jacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!-- xml数据转化器 -->
    <bean id="xmlHttpMessageConverter" class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
        <constructor-arg>
            <bean class="org.springframework.oxm.xstream.XStreamMarshaller"></bean>
        </constructor-arg>
        <property name="supportedMediaTypes">
            <list>
                <value>text/xml;charset=UTF-8</value>
                <value>application/xml</value>
                <value>application/xhtml+xml</value>
            </list>
        </property>
    </bean>

    <!--用于将sql后缀名请求转到json响应类型-->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="mediaTypes" >
            <value>
                sql=application/json
            </value>
        </property>
    </bean>


    <!--<mvc:interceptors>
        <bean name="encodingFilter" class="org.springframework.web.filter.CharacterEncodingFilter" >
            <constructor-arg name="encoding" value="UTF-8" />
            <constructor-arg name="forceEncoding" value="false" />
        </bean>
        <bean name="sessionFilter" class="org.springframework.web.filter.CharacterEncodingFilter" >
            <constructor-arg name="encoding" value="UTF-8" />
            <constructor-arg name="forceEncoding" value="false" />
        </bean>
    </mvc:interceptors>-->
</beans>